#!/usr/bin/env python3
##
## EPITECH PROJECT, 2020
## 101pong.py
## File description:
## 104intersection main file
##

from sys import argv as av
from src.surfaces import sphere, cylinder, cone


def instruction():
    print("USAGE")
    print("\t./104intersection opt xp yp zp xv yv zv p")
    print("\nDESCRIPTION")
    print("\topt\t\tsurface option: 1 for sphere, 2 for a cylinder, 3 for a cone")
    print("\t(xp, yp, zp)\tcoordinates of a point by  which the light ray passes through")
    print("\t(xv, yv, zv)\tcoordinates of a vector parallel to the light ray")
    print("\tp\t\tparameter: radius of the sphere, radius of the cylinder, or angle formed  by the  cone and the Z-axis ")


def err():

    if len(av) == 2 and av[1] == "-h":
        instruction()
        return 84
    elif len(av) != 9:
        instruction()
        return 84
    elif check_arg() != 0:
        instruction()
        return 84
    elif int(av[1]) not in [1, 2, 3]:
        instruction()
        return 84
    elif (av[1] == '1' or av[1] == '2') and int(av[8]) <= 0:
        instruction()
        return 84
    elif av[1] == '3' and (av[8] == "0" or av[8] == "90"):
        instruction()
        return 84
    elif av[5] == '0' and av[6] == '0' and av[7] == '0':
        instruction()
        return 84
    elif av[1] == '3' and not 0 < int(av[8]) < 90:
        p = int(av[8])
        while not 0 < p < 90:
            if p == 0 or p == 90:
                instruction()
                return 84
            elif p > 90:
                p -= 90
            if p < 0:
                p += 90
    return 0


def is_int(value):

    try:
        int(value)
    except ValueError:
        return False
    else:
        return True


def check_arg():

    x = 1
    while x != len(av):
        if not is_int(av[x]):
            return 84
        x += 1
    return 0

def object_type(av):

    if av[1] == '1':
        print(f"Sphere of radius {av[8]}")
    if av[1] == '2':
        print(f"Cylinder of radius {av[8]}")
    if av[1] == '3':
        print(f"Cone with a {av[8]} degree angle")


def line(av):

    print(f"Line passing through the point ({av[2]}, {av[3]}, {av[4]}) and parallel to the vector "
          f"({av[5]}, {av[6]}, {av[7]})")


def main():

    if err() == 84:
        exit(84)
    object_type(av)
    line(av)
    if av[1] == '1':
        exit(sphere(av))
    if av[1] == '2':
        exit(cylinder(av))
    if av[1] == '3':
        exit(cone(av))
    exit(0)


if __name__ == '__main__':
    main()
